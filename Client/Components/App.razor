@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link rel="stylesheet" href="bootstrap/css/bootstrap.min.css"/>
    <script src="popper.min.js"></script>
    <script src="jquery-3.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.bundle.js"></script>
    <script src="bootstrap/js/bootstrap-autocomplete.min.js"></script>
    <link rel="stylesheet" href="app.css"/>
    <link rel="stylesheet" href="Client.styles.css"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <HeadOutlet/>
</head>

<body>
<Routes/>
<script src="_framework/blazor.web.js"></script>
<script>
    // This script handles the web socket connection to the server.
    const websocketUrl = "@Configuration["WebSocketUrl"]";
    const ws = new WebSocket(websocketUrl);
    ws.onopen = () => {
        console.log("WebSocket connection established.");
        ws.send("count");
    };
    ws.onclose = () => {
        console.log("WebSocket connection closed.");
    };
    ws.onerror = (error) => {
        console.error("WebSocket error: ", error);
    };
    ws.onmessage = (message) => {
        //console.log("WebSocket message: ", message.data);
        // The only message i can currently recieve are the amount of users online. TODO: JSON messages
        //if (message.data == "1") {
        //    $("#activeUsers").html("There is currently <em>one user</em> here.");
        //} else {
        //    $("#activeUsers").html("There are currently <em>" + message.data + " users</em> here.");
        //}
    };
    window.ws = ws;
    
    // Every 5 seconds, send a "ping" message to the server.
    setInterval(() => {
        if (ws.readyState !== WebSocket.OPEN) {
            console.error("WebSocket connection is not open.");
            return;
        }
        ws.send("count");
    }, 1500);
    
    // When the user navigates to a new page, close the web socket connection.
    window.addEventListener("beforeunload", () => {
        ws.close();
    });
</script>
</body>

</html>