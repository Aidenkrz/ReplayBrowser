@page "/replay/{id}"
@using Microsoft.AspNetCore.Components.Authorization
@attribute [StreamRendering]
@inject SecureHttpClient SecureHttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Replay viewer</PageTitle>
@if (Replay == null && !IsLoading)
{
    <p>Replay not found</p>
}
else if (IsLoading)
{
    <p>Loading...</p>
}
else
{
    <ReplayViewer Replay="Replay" />
}

@code {
    [Parameter] public string Id { get; set; }
    public Shared.Models.Replay? Replay { get; set; }
    public bool IsLoading { get; set; } = true;
    
    protected override async Task OnInitializedAsync()
    {
        var httpClient = SecureHttpClient.GetClient(await AuthenticationStateProvider.GetAuthenticationStateAsync());
        var response = await httpClient.GetAsync($"replay/{Id}");
        if (response.IsSuccessStatusCode)
        {
            Replay = await response.Content.ReadFromJsonAsync<Shared.Models.Replay>();
        }
        else
        {
            Replay = null;
        }
        
        IsLoading = false;
    }
}